.cc-revoke.cc-top {
    top: 0;
    left: 3em;
    border-bottom-left-radius: 0.5em;
    border-bottom-right-radius: 0.5em;
  }
  .cc-revoke.cc-bottom {
    bottom: 0;
    left: 3em;
    border-top-left-radius: 0.5em;
    border-top-right-radius: 0.5em;
  }
  .cc-revoke.cc-left {
    left: 3em;
    right: unset;
  }
  .cc-revoke.cc-right {
    right: 3em;
    left: unset;
  }
  
  .cc-top {
    top: 1em;
  }
  .cc-left {
    left: 1em;
  }
  .cc-right {
    right: 1em;
  }
  .cc-bottom {
    bottom: 1em;
  }
  
  .cc-floating > .cc-link {
    margin-bottom: 1em;
  }
  
  .cc-floating .cc-message {
    display: block;
    margin-bottom: 1em;
  }
  
  .cc-window.cc-floating .cc-compliance {
    flex: 1 0 auto;
  }
  
  .cc-window.cc-banner {
    align-items: center;
  }
  
  .cc-banner.cc-top {
    left: 0;
    right: 0;
    top: 0;
  }
  .cc-banner.cc-bottom {
    left: 0;
    right: 0;
    bottom: 0;
  }
  
  .cc-banner .cc-message {
    display: block;
    flex: 1 1 auto;
    max-width: 100%;
    margin-right: 1em;
  }
  
  .cc-compliance {
    display: flex;
    align-items: center;
    align-content: space-between;
  }
  .cc-floating .cc-compliance > .cc-btn {
    flex: 1;
  }
  
  .cc-btn + .cc-btn {
    margin-left: 0.5em;
  }

  .cc-window {
    opacity: 1;
    -webkit-transition: opacity 1s ease;
    -moz-transition: opacity 1s ease;
    -ms-transition: opacity 1s ease;
    -o-transition: opacity 1s ease;
    transition: opacity 1s ease;
    background-color: var(--background-color);
  }
  
  .cc-window.cc-invisible {
    opacity: 0;
  }
  
  /* only animate ifhas class 'cc-animate' */
  .cc-animate.cc-revoke {
    -webkit-transition: transform 1s ease;
    -moz-transition: transform 1s ease;
    -ms-transition: transform 1s ease;
    -o-transition: transform 1s ease;
    transition: transform 1s ease;
  }
  .cc-animate.cc-revoke.cc-top {
    transform: translateY(-2em);
  }
  .cc-animate.cc-revoke.cc-bottom {
    transform: translateY(2em);
  }
  .cc-animate.cc-revoke.cc-active.cc-top {
    transform: translateY(0);
  }
  .cc-animate.cc-revoke.cc-active.cc-bottom {
    transform: translateY(0);
  }
  .cc-revoke:hover {
    transform: translateY(0);
  }
  
  .cc-grower {
    /* Initially we don't want any height, and we want the contents to be hidden */
    max-height: 0;
    overflow: hidden;
  
    /* Set our transitions up. */
    -webkit-transition: max-height 1s;
    -moz-transition: max-height 1s;
    -ms-transition: max-height 1s;
    -o-transition: max-height 1s;
    transition: max-height 1s;
  }

.cc-window,
.cc-revoke {
  position: fixed;
  overflow: hidden;
  box-sizing: border-box;
  display: flex;
  flex-wrap: nowrap;
  z-index: 9999;
}

.cc-window.cc-static {
  position: static;
}

.cc-window.cc-banner {
  padding: 1em 1.8em;
  width: 100%;
  flex-direction: row;
}

.cc-revoke {
  padding: 0.5em;
}
.cc-revoke:hover {
  text-decoration: underline;
}

.cc-header {
  font-size: 18px;
  font-weight: bold;
}

.cc-btn,
.cc-link,
.cc-close,
.cc-revoke {
  cursor: pointer;
}

.cc-link {
  opacity: 0.8;
  display: inline-block;
  padding: 0.2em;
  text-decoration: underline;
}
.cc-link:hover {
  opacity: 1;
}
.cc-link:active,
.cc-link:visited {
  color: initial;
}


.cc-highlight .cc-btn:first-child {
  background-color: transparent;
  border-color: transparent;
}

.cc-highlight .cc-btn:first-child:hover,
.cc-highlight .cc-btn:first-child:focus {
  background-color: transparent;
  text-decoration: underline;
}


  .cc-dismiss {
    @extend .m-button;
    color: var(--link-color);
    border: 1px solid var(--primary-foreground-color);
  }